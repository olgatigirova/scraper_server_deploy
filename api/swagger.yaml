---
swagger: "2.0"
info:
  description: "API for scraper server"
  version: "0.0.1"
  title: "Scraper API"
host: "localhost:3000"
schemes:
- "http"
produces:
- "application/json"
- "text/html"
paths:
  /api/search/:
    get:
      tags:
      - "/api/search/"
      summary: "Search dom"
      description: "Search dom elements by URL.\n"
      x-swagger-router-controller: "search"
      operationId: "searchDom"
      parameters:
      - name: "url"
        in: "query"
        description: "URL to search."
        required: true
        type: "string"
      - name: "element"
        in: "query"
        description: "Element to search."
        required: true
        type: "string"
      - name: "level"
        in: "query"
        description: "Search depth level."
        required: false
        type: "integer"
        default: 2
      responses:
        200:
          description: "An array of found elements"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Search"
        500:
          description: "Error if incorrect URL is given"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "/api/search/"
      summary: "Search form processing"
      description: "Search URL using form"
      x-swagger-router-controller: "search"
      operationId: "searchWithForm"
      parameters:
      - in: "body"
        name: "body"
        description: "search body parameters"
        required: true
        schema:
          $ref: "#/definitions/SearchBody"
      responses:
        200:
          description: "Search is done"
        500:
          description: "Error: form has empty fields"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "/api/search/"
      summary: "Delete search request"
      description: "Delete search request"
      x-swagger-router-controller: "search"
      operationId: "deleteSearchRequest"
      parameters:
      - name: "url"
        in: "query"
        description: "URL to search."
        required: true
        type: "string"
      - name: "element"
        in: "query"
        description: "Element to search."
        required: true
        type: "string"
      - name: "level"
        in: "query"
        description: "Search depth level."
        required: false
        type: "integer"
        default: 2
      responses:
        200:
          description: "The search request is deleted."
        404:
          description: "The search request is not found. DELETE failed."
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /api/search/list/:
    get:
      tags:
      - "/api/search/list/"
      summary: "List of  search requests"
      description: "The /api/search/list/ endpoint returns history of all search requests\
        \ executed\n"
      x-swagger-router-controller: "search"
      operationId: "listSearchRequests"
      parameters: []
      responses:
        200:
          description: "An array of search requests"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/List"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /:
    get:
      tags:
      - "/"
      summary: "Provide search from"
      description: "Get Search URL form"
      x-swagger-router-controller: "search"
      operationId: "getForm"
      parameters: []
      responses:
        200:
          description: "Form is sent"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
definitions:
  Search:
    type: "object"
    properties:
      data:
        type: "string"
        description: "Found elements."
  SearchBody:
    required:
    - "url"
    - "element"
    properties:
      url:
        type: "string"
        description: "url to search"
      element:
        type: "string"
        description: "element to search"
      level:
        type: "string"
        description: "search depth"
    description: "Search object"
  List:
    type: "string"
    description: "Search history."
  Error:
    type: "object"
    properties:
      error:
        type: "string"
        description: "Error message."
